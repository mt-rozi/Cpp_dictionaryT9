.SUFFIXES: .c .cpp .o .h .out
##################################################################################
# Makra:
##################################################################################

# folder
DIR = `basename $(PWD)`

# data
TIME = `date +%y%j.%H.%M.%S`

# Nazwy plikow
NAME1 = t9

EXEC1  = $(NAME1).out
OBJS1  = $(NAME1).o

##################################################################################
# Opcje kompilatora:
##################################################################################

CFLAGS = -Wall -pedantic -O  
LFLAGS = -Wall -O

CO = g++
LD = $(CO)

##################################################################################
# Regula zaleznosci mowiaca jak z plikow .c i .h otrzymac .o
##################################################################################

%.o: %.c %.h
	$(CO) $(CFLAGS) -c $<

%.o: %.c
	$(CO) $(CFLAGS) -c $<

##################################################################################
# Regula zaleznosci uaktualniajaca pliki po prawej stronie dwukropka
##################################################################################

.PHONY: all
all: $(EXEC1)

##################################################################################
# Program pierwszy
##################################################################################

$(EXEC1): $(OBJS1)
	$(LD) -o $@ $(LFLAGS) $(OBJS1)

.PHONY: run_1

run_1: $(EXEC1)
	clear
	./$(EXEC1)

##################################################################################
# Sprzataczka 
##################################################################################
clean:                                                     
	rm -f *.o  *~ *.a *.so *.x core core* *.out* *.save*

##################################################################################
# Archiwizacja i kompresja
##################################################################################
tar: clean
	(cd ../; tar -cvzf $(DIR)_$(TIME).tar.gz  $(DIR) )
